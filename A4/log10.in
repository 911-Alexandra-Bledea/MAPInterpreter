
------------------
Execution Stack: 
(int v;(v=4;(while(v > 0){ (print(v);v=v-1) };print(v))))

Symbol Table:
[ 
]
Output Table:

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
int v
(v=4;(while(v > 0){ (print(v);v=v-1) };print(v)))

Symbol Table:
[ 
]
Output Table:

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
(v=4;(while(v > 0){ (print(v);v=v-1) };print(v)))

Symbol Table:
[ 
v: 0, 
]
Output Table:

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
v=4
(while(v > 0){ (print(v);v=v-1) };print(v))

Symbol Table:
[ 
v: 0, 
]
Output Table:

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
(while(v > 0){ (print(v);v=v-1) };print(v))

Symbol Table:
[ 
v: 4, 
]
Output Table:

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
while(v > 0){ (print(v);v=v-1) }
print(v)

Symbol Table:
[ 
v: 4, 
]
Output Table:

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
(print(v);v=v-1)
while(v > 0){ (print(v);v=v-1) }
print(v)

Symbol Table:
[ 
v: 4, 
]
Output Table:

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
print(v)
v=v-1
while(v > 0){ (print(v);v=v-1) }
print(v)

Symbol Table:
[ 
v: 4, 
]
Output Table:

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
v=v-1
while(v > 0){ (print(v);v=v-1) }
print(v)

Symbol Table:
[ 
v: 4, 
]
Output Table:
4

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
while(v > 0){ (print(v);v=v-1) }
print(v)

Symbol Table:
[ 
v: 3, 
]
Output Table:
4

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
(print(v);v=v-1)
while(v > 0){ (print(v);v=v-1) }
print(v)

Symbol Table:
[ 
v: 3, 
]
Output Table:
4

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
print(v)
v=v-1
while(v > 0){ (print(v);v=v-1) }
print(v)

Symbol Table:
[ 
v: 3, 
]
Output Table:
4

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
v=v-1
while(v > 0){ (print(v);v=v-1) }
print(v)

Symbol Table:
[ 
v: 3, 
]
Output Table:
4
3

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
while(v > 0){ (print(v);v=v-1) }
print(v)

Symbol Table:
[ 
v: 2, 
]
Output Table:
4
3

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
(print(v);v=v-1)
while(v > 0){ (print(v);v=v-1) }
print(v)

Symbol Table:
[ 
v: 2, 
]
Output Table:
4
3

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
print(v)
v=v-1
while(v > 0){ (print(v);v=v-1) }
print(v)

Symbol Table:
[ 
v: 2, 
]
Output Table:
4
3

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
v=v-1
while(v > 0){ (print(v);v=v-1) }
print(v)

Symbol Table:
[ 
v: 2, 
]
Output Table:
4
3
2

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
while(v > 0){ (print(v);v=v-1) }
print(v)

Symbol Table:
[ 
v: 1, 
]
Output Table:
4
3
2

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
(print(v);v=v-1)
while(v > 0){ (print(v);v=v-1) }
print(v)

Symbol Table:
[ 
v: 1, 
]
Output Table:
4
3
2

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
print(v)
v=v-1
while(v > 0){ (print(v);v=v-1) }
print(v)

Symbol Table:
[ 
v: 1, 
]
Output Table:
4
3
2

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
v=v-1
while(v > 0){ (print(v);v=v-1) }
print(v)

Symbol Table:
[ 
v: 1, 
]
Output Table:
4
3
2
1

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
while(v > 0){ (print(v);v=v-1) }
print(v)

Symbol Table:
[ 
v: 0, 
]
Output Table:
4
3
2
1

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 
print(v)

Symbol Table:
[ 
v: 0, 
]
Output Table:
4
3
2
1

File Table:
[ 
]
Heap: 

------------------
Execution Stack: 

Symbol Table:
[ 
v: 0, 
]
Output Table:
4
3
2
1
0

File Table:
[ 
]
Heap: 
